---
name: Maven Build
"on":
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  maven-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest ]
        java: [ 1.8, 11, 13 ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-jdk-${{ matrix.java }}-mvn-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-jdk-${{ matrix.java }}-mvn-
      - name: Build it with Maven
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
             mvn clean verify -B -Pqulice
          elif [ "$RUNNER_OS" == "Windows" ]; then
             mvn clean test -B -Pqulice
          else
             echo "$RUNNER_OS not supported"
             exit 1
          fi
        shell: bash
  # @todo #309:30min Fix ci integration tests with testcontainers for Windows.
  #  The Windows command run only unit tests (Integration tests are ignored).
  #  When we execute {@code mvn clean verify -B -Pqulice}, integration tests based on testcontainers
  #  failed to run with this message : `main org.testcontainers.dockerclient.DockerClientProviderStrategy:
  #  NpipeSocketClientProviderStrategy: failed with exception InvalidConfigurationException (windows containers
  #  are currently not supported)`.
  #  We have to find the right configuration that allow us to run docker in docker
  #  for Windows and replace Windows command. You can find at
  #  {@link https://www.testcontainers.org/supported_docker_environment/continuous_integration/dind_patterns/}
  #  some documentation about that.